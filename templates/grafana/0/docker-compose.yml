version: '2'

services:
  prometheus:
    image: prom/prometheus:${prometheus_version}
{{- if (.Values.prometheus_public_port)}}
    ports:
      - ${prometheus_public_port}:9090
{{- end}}
    tty: true
    extra_hosts:
      - rancher-server:${rancher_server}
    links:
      - cadvisor:cadvisor
      - node-exporter:node-exporter
      - prometheus-rancher-exporter:prometheus-rancher-exporter
    volumes_from:
      - prom-conf
    volume_driver: ${volume_driver}
    volumes:
      - {{.Stack.Name}}--prometheus-data:/prometheus
    command: --config.file=/etc/prom-conf/prometheus.yml --storage.tsdb.path=/prometheus --web.console.libraries=/etc/prometheus/console_libraries --web.console.templates=/etc/prometheus/consoles
    labels:
      io.rancher.sidekicks: prom-conf

  grafana:
    image: grafana/grafana:${grafana_version}
    tty: true
{{- if (.Values.grafana_public_port)}}
    ports:
      - ${grafana_public_port}:3000
{{- end}}
    links:
      - prometheus:prometheus
      - prometheus-rancher-exporter:prometheus-rancher-exporter
    environment:
      GF_USERS_ALLOW_SIGN_UP: ${open_registration}
    volumes_from:
      - graf-db
    labels:
      io.rancher.sidekicks: graf-db

  node-exporter:
    image: prom/node-exporter:latest
    stdin_open: true
    tty: true
    labels:
      io.rancher.scheduler.global: 'true'

  prometheus-rancher-exporter:
    image: infinityworks/prometheus-rancher-exporter:v0.22.52
    tty: true
    labels:
      io.rancher.container.create_agent: true
      io.rancher.container.agent.role: environment

  cadvisor:
    image: google/cadvisor:latest
    stdin_open: true
    tty: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    labels:
      io.rancher.scheduler.global: true

  prom-conf:
    image: infinityworks/prom-conf:20
    net: none
    tty: true
    user: root
    volumes:
      - /etc/prom-conf

  graf-db:
    image: codejamninja/graf-db:latest
    net: none
    tty: true
    volume_driver: ${volume_driver}
    volumes:
      - {{.Stack.Name}}--graf-db-data:/var/lib/grafana
    command: cat
